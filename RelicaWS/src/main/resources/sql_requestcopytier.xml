<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
<comment>This query returns request copy related queries.</comment>
<entry key="copypoolcount.sql">
SELECT COPY_POOL_LARGE,COPY_POOL_SMALL,(SELECT COUNT(*) FROM ASSET_REPLICA.DBO.BATCHJOBS WITH(NOLOCK) WHERE
STORAGE_ID=SL.ID AND
JOB_TYPE='COPY_LARGE' AND
  JOB_STATUS='NEW') CURRENT_COPY_LARGE ,(SELECT COUNT(*) FROM ASSET_REPLICA.DBO.BATCHJOBS WITH(NOLOCK) WHERE
STORAGE_ID=SL.ID AND
JOB_TYPE='COPY_SMALL' AND
  JOB_STATUS='NEW') CURRENT_COPY_SMALL FROM  ASSET_REPLICA.DBO.STORAGE_LOCATIONS SL WHERE
                id=:storageId
</entry>

<entry key="eligiblecopyassets.sql">
DECLARE @storageId int
DECLARE @hostName varchar(256)
set @storageId=?
set @hostName=?

declare @OUTPUT_RECS TABLE(
  job_id int, 
  asset_instance_id int,
  job_type char(20)
  )

;WITH POOL_LEVELS AS (
     SELECT SL_jobs.id as POOL_STORAGE_ID
      ,     SL_jobs.COPY_pool_large as TOTAL_POOL_LARGE
      ,     SL_jobs.COPY_pool_small as TOTAL_POOL_SMALL
      ,     sum( CASE when ( bj1.job_type='COPY_LARGE' and bj1.job_status='NEW') then 1 else 0 end) as CURRENT_COPY_LARGE
      ,     sum( CASE when ( bj1.job_type='COPY_SMALL' and bj1.job_status='NEW') then 1 else 0 end) as CURRENT_COPY_SMALL
    from ASSET_REPLICA.dbo.storage_locations SL_jobs 
         LEFT OUTER JOIN ASSET_REPLICA.dbo.batchjobs bj1 WITH(NOLOCK) on SL_jobs.id=bj1.storage_id 
              and bj1.storage_id= @storageId and bj1.job_type in ('COPY_LARGE','COPY_SMALL')
              and bj1.job_status='NEW'
    where 
      SL_JOBS.id= @storageId
            GROUP by SL_JOBS.id, SL_JOBS.COPY_pool_large, SL_JOBS.COPY_pool_small 
) ,
SIZE_CUTOFF AS (select min(CONVERT(int,dct.value)) as MAX_SMALLFILESIZE from ASSET_REPLICA.dbo.dictionary dct
    where dct.dictionary='CONFIG' and dct.keyname='SMALL_FILESIZE')

insert into ASSET_REPLICA.dbo.batchjobs(
    job_type
  , asset_instance_id
  , storage_id
  , start_date
  , job_status
  , request_host_name
  ) 
 output inserted.job_id, inserted.asset_instance_id, inserted.job_type INTO @OUTPUT_RECS 

SELECT TOP 1
CASE WHEN a.FILESIZE &lt;= SIZE_CUTOFF.MAX_SMALLFILESIZE THEN 'COPY_SMALL' else 'COPY_LARGE' END
JOB_TYPE,
AI_OUTER.ID,
@storageId,
getdate(),
'NEW',
@hostName
  FROM ASSET_REPLICA.DBO.ASSET_INSTANCES AI_OUTER WITH(NOLOCK)
  INNER JOIN ASSET_REPLICA.DBO.STORAGE_LOCATIONS FBD_OR_NOT
  ON AI_OUTER.storage_location_id = FBD_OR_NOT.ID
  INNER JOIN ASSET_REPLICA.DBO.ASSETS A  WITH(NOLOCK)
  ON AI_OUTER.ASSET_ID = A.ID
  INNER JOIN ASSET_REPLICA.DBO.POLICIES p ON A.POLICY_ID=P.ID
  INNER JOIN ASSET_REPLICA.DBO.sites S ON S.id=FBD_OR_NOT.site_id
  CROSS JOIN POOL_LEVELS 
  CROSS JOIN SIZE_CUTOFF
WHERE 

  ((A.FILESIZE &lt;= SIZE_CUTOFF.MAX_SMALLFILESIZE AND POOL_LEVELS.TOTAL_POOL_SMALL >

   CASE WHEN (SELECT COUNT(1)
       FROM ASSET_REPLICA.DBO.asset_instances AIX WITH(NOLOCK),
       ASSET_REPLICA.DBO.STORAGE_LOCATIONS SLX,
       ASSET_REPLICA.DBO.POLICIES PP
       WHERE AIX.asset_id = a.id AND
         AIX.storage_location_id = SLX.ID AND
         (AIX.STATUS='V' OR (AIX.STATUS='N' AND PP.MD5_CHECK=0))  AND 
         A.POLICY_ID=PP.ID ) >= 1
         THEN
          POOL_LEVELS.CURRENT_COPY_SMALL 
    END
)
   OR
  (
                A.FILESIZE > SIZE_CUTOFF.MAX_SMALLFILESIZE 
                 AND   POOL_LEVELS.TOTAL_POOL_LARGE >
   CASE WHEN (SELECT COUNT(1)
       FROM ASSET_REPLICA.DBO.asset_instances AIX WITH(NOLOCK),
       ASSET_REPLICA.DBO.STORAGE_LOCATIONS SLX,
       ASSET_REPLICA.DBO.POLICIES P1
       WHERE AIX.asset_id = a.id AND
          AIX.storage_location_id = SLX.ID AND
          A.POLICY_ID=p1.ID AND
         (AIX.STATUS='V' OR (AIX.STATUS='N' AND P1.MD5_CHECK=0)) ) >= 1
         THEN
         POOL_LEVELS.CURRENT_COPY_LARGE 
    END
                
                 ))
   AND
  
  (AI_OUTER.STATUS='V' OR (AI_OUTER.STATUS='N' AND P.MD5_CHECK=0))  AND 
  
 AI_OUTER.ASSET_ID IN (
SELECT A.ID
  FROM ASSET_REPLICA.DBO.ASSETS a WITH(NOLOCK)
INNER JOIN ASSET_REPLICA.DBO.POLICIES p ON A.POLICY_ID=P.ID
   AND A.DELETE_DATE IS NULL 
    AND P.ACTIVE = 1 
INNER JOIN ASSET_REPLICA.DBO.POLICY_SITES PS  ON PS.POLICY_ID=P.ID
INNER JOIN ASSET_REPLICA.DBO.SITES S     ON S.ID = PS.SITE_ID 
INNER JOIN ASSET_REPLICA.DBO.STORAGE_LOCATIONS SL  ON S.ID = SL.SITE_ID
WHERE SL.ID =  @storageId

AND PS.NUMBER_COPIES > 0

--check whether any valid instances available other than input storage location

AND EXISTS(
SELECT 1 FROM ASSET_REPLICA.DBO.ASSET_INSTANCES AI_EL WITH(NOLOCK)
WHERE 
  AI_EL.ASSET_ID=A.ID AND
  AI_EL.STORAGE_LOCATION_ID &lt;> SL.ID AND
  AI_EL.STATUS IN ('V','N')
)
 
--checking input storagelocation should not exist in AI      
AND  NOT EXISTS(
SELECT 1
  FROM ASSET_REPLICA.DBO.ASSET_INSTANCES AI_INNER with(nolock) 
  WHERE AI_INNER.ASSET_ID =A.ID AND 
 AI_INNER.STATUS IN ('V','N') AND
 AI_INNER.STORAGE_LOCATION_ID =SL.ID
)      

--checking numberofcopies must be equal to the AI across particular site       
AND  NOT EXISTS(
SELECT 1 FROM ASSET_REPLICA.DBO.ASSET_INSTANCES AI_INNER WITH(NOLOCK),ASSET_REPLICA.DBO.POLICY_SITES PS

WHERE 
AI_INNER.ASSET_ID = A.ID AND 
AI_INNER.STATUS IN ('V','N') AND
A.POLICY_ID=PS.POLICY_ID AND
PS.SITE_ID=SL.SITE_ID AND
AI_INNER.STORAGE_LOCATION_ID IN (
	SELECT sli.id FROM ASSET_REPLICA.DBO.storage_locations sli where sli.site_id =SL.site_id )
	GROUP BY SITE_ID,PS.NUMBER_COPIES
	HAVING PS.NUMBER_COPIES = COUNT(distinct AI_INNER.STORAGE_LOCATION_ID)
)
AND NOT EXISTS (SELECT 'X' FROM 
                  ASSET_REPLICA.DBO.BATCHJOBS BJ WITH(NOLOCK),
                  ASSET_REPLICA.DBO.ASSET_INSTANCES AIII WITH(NOLOCK)
                  WHERE 
                  A.ID=AIII.ASSET_ID AND
                  BJ.ASSET_INSTANCE_ID=AIII.ID AND   
                  BJ.STORAGE_ID=SL.ID AND
                  BJ.JOB_TYPE IN('COPY_LARGE','COPY_SMALL','RESTORE_LARGE','RESTORE_SMALL') AND 
                  (BJ.END_DATE IS NULL OR (BJ.JOB_STATUS='ERROR' AND
                       BJ.END_DATE > DATEADD(HOUR,-1,GETDATE())))
                  )
)
ORDER BY A.id DESC,S.IS_PRIMARY_SITE DESC

select job_id,asset_instance_id,job_type from @OUTPUT_RECS
</entry>


<entry key="asset_source_dest_base_relativepaths.sql">
   SELECT AI.STORAGE_LOCATION_ID AS STORAGE_LOCATION_ID,
SL.PATH + A.FS_PATH  as  SRC_BASEPATH_RELPATH, 
SLL.PATH + SUBSTRING(A.FS_PATH,0,LEN(A.FS_PATH) - CHARINDEX('/', REVERSE(A.FS_PATH)) +1) AS DESTINATION_BASEPATH,
AI.ID     AS ASSET_INSTANCEID, 
SL.ID                    AS STORAGELOCATIONID, 
SL.PHYSICAL_NAME         PHYSICAL_NAME 
FROM ASSET_REPLICA.DBO.ASSETS A WITH(NOLOCK),
ASSET_REPLICA.DBO.ASSET_INSTANCES AI WITH(NOLOCK),
ASSET_REPLICA.DBO.STORAGE_LOCATIONS SL, 
ASSET_REPLICA.DBO.STORAGE_LOCATIONS SLL 
WHERE A.ID=AI.ASSET_ID AND
AI.ID=:assetInstanceId  AND
AI.STORAGE_LOCATION_ID = SL.ID AND
SLL.ID = :storageId     
       
</entry>
<entry key="retreiveBatchJob.sql">
SELECT BJ.ASSET_INSTANCE_ID AS AID,A.FS_PATH AS NAME,BJ.STORAGE_ID AS STORAGEID
FROM ASSET_REPLICA.DBO.BATCHJOBS BJ WITH(NOLOCK),
ASSET_REPLICA.DBO.ASSETS A WITH(NOLOCK),
ASSET_REPLICA.DBO.ASSET_INSTANCES AI WITH(NOLOCK)
WHERE JOB_ID=:batchId
AND A.ID=AI.ASSET_ID 
AND AI.STATUS IN('N','V') 
AND BJ.ASSET_INSTANCE_ID=AI.ID
AND BJ.JOB_STATUS='NEW'    
</entry>   

<entry key="is_tier1storage_exists.sql">
 SELECT TOP 1 'X' FROM ASSET_REPLICA.DBO.STORAGE_LOCATIONS
 WHERE 
 SITE_ID NOT IN(:tier2SiteId)
 AND ID IN(SELECT  STORAGE_LOCATION_ID FROM 
 ASSET_REPLICA.DBO.ASSET_INSTANCES AI WITH(NOLOCK), ASSET_REPLICA.DBO.ASSETS A WITH(NOLOCK), ASSET_REPLICA.DBO.POLICIES P
 WHERE 
 A.ID=AI.ASSET_ID AND
 ASSET_ID=:assetId AND 
 A.POLICY_ID =P.ID AND
 (AI.STATUS='V' OR (AI.status='N' AND P.md5_check=0)))
</entry>

<entry key="restorepoolcount.sql">
SELECT RESTORE_POOL_LARGE,(SELECT COUNT(1) FROM ASSET_REPLICA.DBO.BATCHJOBS WITH(NOLOCK) WHERE
STORAGE_ID=SL.ID AND
JOB_TYPE='RESTORE' AND
END_DATE is NULL) CURRENT_COPY_LARGE  FROM  ASSET_REPLICA.DBO.STORAGE_LOCATIONS SL WHERE
                id=:storageId
</entry>

<entry key="retrieveRestoreAsset.sql">
SELECT P.CUSTOMER_ID,A.ID AS ASSETID,A.FS_PATH,AI.ID AS INSTANCEID
FROM 
  ASSET_REPLICA.DBO.POLICIES P,
  ASSET_REPLICA.DBO.ASSETS A WITH(NOLOCK),
  ASSET_REPLICA.DBO.ASSET_INSTANCES AI WITH(NOLOCK)
WHERE 
   P.ID=A.POLICY_ID AND
   A.ID=AI.ASSET_ID AND
   AI.ID=:assetInstanceId
</entry> 

<entry key="retrieveRestoreJobsinNew.sql">
SELECT JOB_ID, JOB_DETAIL,BJ.ASSET_INSTANCE_ID,AI.FILENAME
FROM ASSET_REPLICA.DBO.BATCHJOBS BJ WITH(NOLOCK),ASSET_REPLICA.DBO.ASSET_INSTANCES AI WITH(NOLOCK)
 
WHERE BJ.JOB_TYPE IN('RESTORE_LARGE','RESTORE_SMALL') AND 
   BJ.JOB_STATUS='NEW' 
   AND BJ.ASSET_INSTANCE_ID=AI.ID
   AND AI.STATUS IN('V') AND
  BJ.storage_id=:storageId AND
  UPPER(BJ.REQUEST_HOST_NAME) LIKE UPPER(:inputHostName)+'%'
</entry>    
<entry key="IsOnlyOneRestoreJobExistsFromFPinBatch.sql">
SELECT COUNT(BJ.JOB_ID) ACTUAL_COPIES,
          (SELECT NUMBER_COPIES FROM ASSET_REPLICA.DBO.POLICY_SITES PS,
          ASSET_REPLICA.DBO.STORAGE_LOCATIONS SL,
          ASSET_REPLICA.DBO.ASSETS A WITH(NOLOCK)
             WHERE PS.POLICY_ID=A.POLICY_ID AND 
              A.ID=:assetId AND 
              PS.SITE_ID=SL.SITE_ID AND
              SL.ID=:storageId
          ) NUMBER_COPIES
          FROM 
          ASSET_REPLICA.DBO.BATCHJOBS BJ WITH(NOLOCK) ,
          ASSET_REPLICA.DBO.ASSET_INSTANCES AI WITH(NOLOCK),
          ASSET_REPLICA.DBO.ASSETS A WITH(NOLOCK),
          ASSET_REPLICA.DBO.POLICY_SITES PS,ASSET_REPLICA.DBO.STORAGE_LOCATIONS SLL
          WHERE  
          AI.ASSET_ID=A.ID AND
          AI.STATUS IN('N','V') AND
          A.ID =:assetId AND
          A.POLICY_ID=PS.POLICY_ID  AND 
          BJ.ASSET_INSTANCE_ID =AI.ID AND 
          BJ.JOB_TYPE IN('RESTORE') AND
          BJ.JOB_STATUS  IN('NEW') AND 
          SLL.SITE_ID=PS.SITE_ID AND 
          SLL.ID=:storageId AND
          BJ.STORAGE_ID IN
          (SELECT SL1.ID FROM ASSET_REPLICA.DBO.STORAGE_LOCATIONS SL1
          WHERE SL1.SITE_ID=(SELECT  SITE_ID FROM ASSET_REPLICA.DBO.STORAGE_LOCATIONS SL2
          WHERE
          SL2.ID=SLL.ID))
</entry>
<entry key="tier1copies.sql">
SELECT COUNT(BJ.JOB_ID) ACTUAL_COPIES,
          (SELECT NUMBER_COPIES FROM ASSET_REPLICA.DBO.POLICY_SITES PS,
          ASSET_REPLICA.DBO.STORAGE_LOCATIONS SL,
          ASSET_REPLICA.DBO.ASSETS A WITH(NOLOCK)
             WHERE PS.POLICY_ID=A.POLICY_ID AND 
              A.ID=:assetId AND 
              PS.SITE_ID=SL.SITE_ID AND
              SL.ID=:storageId
          ) NUMBER_COPIES
          FROM 
          ASSET_REPLICA.DBO.BATCHJOBS BJ WITH(NOLOCK),
          ASSET_REPLICA.DBO.ASSET_INSTANCES AI WITH(NOLOCK),
          ASSET_REPLICA.DBO.ASSETS A WITH(NOLOCK),
          ASSET_REPLICA.DBO.POLICY_SITES PS,ASSET_REPLICA.DBO.STORAGE_LOCATIONS SLL
          WHERE  
          AI.ASSET_ID=A.ID AND
          AI.STATUS IN('N','V') AND
          A.ID =:assetId AND
          A.POLICY_ID=PS.POLICY_ID  AND 
          BJ.ASSET_INSTANCE_ID =AI.ID AND 
          BJ.JOB_TYPE IN('COPY_LARGE','COPY_SMALL') AND
          BJ.JOB_STATUS  IN('NEW') AND 
          SLL.SITE_ID=PS.SITE_ID AND 
          SLL.ID=:storageId AND
          BJ.STORAGE_ID IN
          (SELECT SL1.ID FROM ASSET_REPLICA.DBO.STORAGE_LOCATIONS SL1
          WHERE SL1.SITE_ID=(SELECT  SITE_ID FROM ASSET_REPLICA.DBO.STORAGE_LOCATIONS SL2
          WHERE
          SL2.ID=SLL.ID))
   </entry>
   
<entry key="inOutHostNameQuery.sql">
SELECT ISNULL( 
(SELECT OUTPUT_HOSTNAME FROM ASSET_REPLICA.DBO.HOSTNAME_MAPPINGS
WHERE UPPER(INPUT_HOSTNAME) LIKE UPPER(:inputHostName)+'%' AND 
UPPER(SOURCE_HOSTNAME) = UPPER(:sourceHostName) ), 'NO_HOST_MAPPING_FOUND'
)
AS  OUTPUT_HOSTNAME
</entry>

</properties>
